#!/bin/bash

# Easier navigation: .., ..., ...., ....., ~ and -
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

# Shortcuts
alias dl="cd ~/Downloads"
alias h="history"


# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always enable colored `grep` output
alias grep='grep --color=auto '

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Get week number
alias week='date +%V'

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

# IP addresses
alias localip="sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# OS X has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# OS X has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | xclip -selection clipboard"

# Merge PDF files
# Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`
alias mergepdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'

# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
	alias "$method"="lwp-request -m '$method'"
done

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

# vhosts
alias hosts='sudo vim /etc/hosts'

# copy working directory
alias cwd='pwd | tr -d "\r\n" | xclip -selection clipboard'

# hybris aliases
alias ystop='zsh -c "cd $HYBRIS_HOME_DIR/installer && ./install.sh -r platform_only stop"'
alias ystart='zsh -c "cd $HYBRIS_HOME_DIR/installer && ./install.sh -r platform_only startInBackground"'
alias yunitinit='zsh -c "cd $HYBRIS_HOME_DIR/hybris/bin/platform && ant yunitinit"'
alias yunit='f() { zsh -c "cd $HYBRIS_HOME_DIR/hybris/bin/platform && ant unittests -Dtestclasses.packages=${${${1:-\*}:s%\.%\\.%}:s%\*%\\*%}" };f'
alias yint='f() { zsh -c "cd $HYBRIS_HOME_DIR/hybris/bin/platform && ant integrationtests -Dtestclasses.packages=${${${1:-\*}:s%\.%\\.%}:s%\*%\\*%}" };f'

## complex hybris aliases
function ydatahub-ext-fn() {
	hybrisDir=$1
	dataHubExt=$2
	if [ -z "${hybrisDir}" ] || [ -z "${dataHubExt}" ]; then
		echo "Usage: ydatahub-ext hybrisDir dataHubExtension"
		return 1
	fi


	filenameRegexPattern=".*\/\(.*\?\)-\([0-9.]\+\)[-]\?\?.*\.jar"
	jarFileDir="${hybrisDir}/bin/ext-integration/datahub/extensions/sap"	
	dataHubDir=$PWD
	localRepoDir=${dataHubDir}/modules/repository
	groupId="com.hybris.datahub"

	artifacts=()
	versions=()
	for jarFile in ${jarFileDir}/${dataHubExt}*(N); do
		artifactId=`echo $jarFile | sed 's/'$filenameRegexPattern'/\1/'`
		version=`echo $jarFile | sed 's/'$filenameRegexPattern'/\2/'`
		artifacts+=(${artifactId})
		versions+=(${version})

		mvn install:install-file -Dfile=$jarFile -DgroupId=$groupId -DartifactId=$artifactId -Dversion=$version -Dpackaging=jar -DlocalRepositoryPath=$localRepoDir
	done

	if [ ${#artifacts[@]} -gt 0 ]; then
		echo "Add following dependency snippet to your pom.xml files:"
		for ((i = 1; i <= ${#artifacts[@]}; i++)); do
			echo "
				<dependency>
					<groupId>$groupId</groupId>
					<artifactId>$artifacts[i]</artifactId>
					<version>$versions[i]</version>
				</dependency>
			"
		done
	else
		echo "No extensions found"
	fi
}

alias ydatahub-ext=ydatahub-ext-fn
